const axios = require("axios");
const fs = require("fs");
const https = require("https");

function formatDate(ts) {
  if (!ts) return "N/A";
  const date = new Date(parseInt(ts) * 1000);
  return date.toLocaleString("en-GB", { timeZone: "Asia/Dhaka" });
}

module.exports.config = {
  name: "bhau",
  version: "2.2",
  author: "Siam Bhau + ChatGPT",
  description: "Free Fire full account info using UID and outfit image",
  usage: "/bhau <uid>",
  commandCategory: "game",
  cooldowns: 5
};

module.exports.run = async function({ api, event, args }) {
  const uid = args[0];
  if (!uid) return api.sendMessage("‚ùå UID ‡¶¶‡¶æ‡¶ì\n\n‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞:\n/bhau <uid>", event.threadID, event.messageID);

  try {
    const { data } = await axios.get(`INFO_API_LINK`);
    if (!data?.basicInfo) return api.sendMessage("‚ùå ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!", event.threadID, event.messageID);

    const {
      nickname, region, level, exp, liked, rank, csRank, badgeCnt, maxRank, csMaxRank, releaseVersion,
      bannerId, headPic, pinId, title, weaponSkinShows, badgeId, seasonId, createAt, lastLoginAt,
      showBrRank, showCsRank, externalIconInfo
    } = data.basicInfo;

    const profile = data.profileInfo || {};
    const clan = data.clanBasicInfo || {};
    const captain = data.captainBasicInfo || {};
    const pet = data.petInfo || {};
    const social = data.socialInfo || {};
    const diamondCost = data.diamondCostRes?.diamondCost || 0;
    const creditScore = data.creditScoreInfo?.creditScore || "N/A";
    const creditEnd = data.creditScoreInfo?.periodicSummaryEndTime;

    const msg = 
`üéÆ ùóôùó•ùóòùóò ùóôùóúùó•ùóò ùóîùóñùóñùó¢ùó®ùó°ùóß ùóúùó°ùóôùó¢
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üë§ Nickname: ${nickname}
üåç Region: ${region}
üìõ UID: ${uid}
‚≠ê Level: ${level}
‚ù§Ô∏è Likes: ${liked}
üéØ EXP: ${exp}
üíé Diamond Cost: ${diamondCost}
üõ°Ô∏è Credit Score: ${creditScore}
üïì Credit End: ${formatDate(creditEnd)}
üéüÔ∏è Badge Count: ${badgeCnt}
üèÖ Badge ID: ${badgeId}
üìÜ Season: ${seasonId}
üöÄ Version: ${releaseVersion}
üñºÔ∏è Banner ID: ${bannerId}
üë§ Head Pic ID: ${headPic}
üìå Pin ID: ${pinId}
üè∑Ô∏è Title ID: ${title}
üî´ Weapon Skins: ${weaponSkinShows?.join(", ") || "N/A"}
üì∂ BR Rank: ${rank} (Max: ${maxRank})
ü•∑ CS Rank: ${csRank} (Max: ${csMaxRank})
üëÅÔ∏è Show BR Rank: ${showBrRank}
üëÅÔ∏è Show CS Rank: ${showCsRank}
üåê External Icon: Status = ${externalIconInfo?.status}, ShowType = ${externalIconInfo?.showType}
üìÖ Created At: ${formatDate(createAt)}
üîì Last Login: ${formatDate(lastLoginAt)}

üëö Avatar ID: ${profile.avatarId || "N/A"}
üß• Clothes: ${profile.clothes?.join(", ") || "N/A"}
üéÆ Skills: ${profile.equipedSkills?.join(", ") || "N/A"}
üî´ Primary Weapon: ${profile.pvePrimaryWeapon || "N/A"}
‚è±Ô∏è End Time: ${profile.endTime || "N/A"}
‚è≥ Unlock Time: ${profile.unlockTime || "N/A"}
üåü Marked Star: ${profile.isMarkedStar || "N/A"}
üé® Tailor Effects: ${profile.clothesTailorEffects?.join(", ") || "N/A"}

üêæ Pet ID: ${pet.id || "N/A"}, Level: ${pet.level || "N/A"}
üé® Pet Skin ID: ${pet.skinId || "N/A"}
üß† Pet Skill: ${pet.selectedSkillId || "N/A"}

üèÖ Guild: ${clan.clanName || "N/A"} (Lv.${clan.clanLevel || "?"}, ${clan.memberNum || 0}/${clan.capacity || "?"})
üÜî Guild ID: ${clan.clanId || "N/A"}
üëë Captain ID: ${clan.captainId || "N/A"}

üßë‚Äç‚úàÔ∏è Guild Captain:
‚Ä¢ Nick: ${captain.nickname || "N/A"}
‚Ä¢ Level: ${captain.level || "N/A"}
‚Ä¢ EXP: ${captain.exp || "N/A"}
‚Ä¢ Likes: ${captain.liked || "N/A"}
‚Ä¢ Banner ID: ${captain.bannerId || "N/A"}
‚Ä¢ Head Pic ID: ${captain.headPic || "N/A"}
‚Ä¢ Rank: ${captain.rank || "N/A"}
‚Ä¢ Max BR: ${captain.maxRank || "N/A"}
‚Ä¢ Max CS: ${captain.csMaxRank || "N/A"}
‚Ä¢ Badge ID: ${captain.badgeId || "N/A"}
‚Ä¢ Badge Count: ${captain.badgeCnt || "N/A"}
‚Ä¢ Title: ${captain.title || "N/A"}
‚Ä¢ Release Version: ${captain.releaseVersion || "N/A"}
‚Ä¢ Created At: ${formatDate(captain.createAt)}
‚Ä¢ Last Login: ${formatDate(captain.lastLoginAt)}

üìù Bio:
${social.signature || "‚Äî"}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üì° Siam Bhau`;

    
    api.sendMessage(msg, event.threadID, async (err, info) => {
      if (err) return;

      
      const imgUrl = `OUTFIT-API`;
      const path = __dirname + `/outfit_${uid}.png`;
      const file = fs.createWriteStream(path);

      https.get(imgUrl, response => {
        response.pipe(file);
        file.on("finish", () => {
          file.close(() => {
            api.sendMessage({
              body: "üß• ùó£ùóπùóÆùòÜùó≤ùóø ùó¢ùòÇùòÅùó≥ùó∂ùòÅ:",
              attachment: fs.createReadStream(path)
            }, event.threadID, () => {
              fs.unlinkSync(path); 
            }, info.messageID);
          });
        });
      }).on("error", err => {
        console.log("Outfit Image Error:", err.message);
        fs.unlinkSync(path);
      });
    });

  } catch (err) {
    console.log(err.message);
    return api.sendMessage("‚ùå ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID, event.messageID);
  }
};
