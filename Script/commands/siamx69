const axios = require("axios");
const ytdl = require("ytdl-core");
const fs = require("fs");
const path = require("path");

const GOOGLE_API_KEY = "AIzaSyDB1C1voxsVqwRlhoPhu6XHoIF2eWtUoIA";

module.exports.config = {
  name: "siamx69",
  version: "3.0",
  hasPermssion: 0,
  credits: "ChatGPT",
  description: "YouTube video search with thumbnail and download",
  commandCategory: "media",
  usages: "/siamx69 video query-limit",
  cooldowns: 3
};

let videoCache = {}; // { threadID: [videoArray] }

module.exports.run = async function ({ api, event, args }) {
  const input = args.join(" ");
  const [type, ...rest] = input.split(" ");
  const [query, limitStr] = rest.join(" ").split("-");
  const limit = parseInt(limitStr) || 5;

  if (type !== "video") {
    return api.sendMessage("‚ùå ‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡ßá ‡¶è‡¶ñ‡¶® ‡¶∂‡ßÅ‡¶ß‡ßÅ `/siamx123 video` ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá", event.threadID, event.messageID);
  }

  try {
    const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=${limit}&q=${encodeURIComponent(query)}&type=video&key=${GOOGLE_API_KEY}`;
    const res = await axios.get(url);
    const items = res.data.items || [];

    if (items.length === 0) return api.sendMessage("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§", event.threadID, event.messageID);

    const msg = items.map((item, i) =>
      `${i + 1}. ${item.snippet.title}`
    ).join("\n");

    const attachments = await Promise.all(items.map(async (item) => {
      const thumbUrl = item.snippet.thumbnails.high.url;
      try {
        const response = await axios.get(thumbUrl, { responseType: "arraybuffer" });
        const tempPath = path.join(__dirname, `thumb_${Date.now()}_${Math.random()}.jpg`);
        fs.writeFileSync(tempPath, response.data);
        return fs.createReadStream(tempPath);
      } catch {
        return null;
      }
    }));

    videoCache[event.threadID] = items; // Save for reply

    return api.sendMessage({
      body: `üìπ ${query} ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü:\n\n${msg}\n\nüëâ ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶ö‡¶æ‡¶ì, ‡¶∏‡ßá‡¶á ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡¶ü‡¶ø ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã`,
      attachment: attachments.filter(Boolean)
    }, event.threadID, (err, info) => {
      global.client.handleReply.push({
        name: this.config.name,
        messageID: info.messageID,
        author: event.senderID,
        type: "video",
        query: query,
        threadID: event.threadID
      });
    });
  } catch (err) {
    console.error(err);
    return api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID, event.messageID);
  }
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
  const index = parseInt(event.body);
  if (isNaN(index)) return;

  const list = videoCache[handleReply.threadID];
  if (!list || !list[index - 1]) return api.sendMessage("‚ùå ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶ì!", event.threadID, event.messageID);

  const video = list[index - 1];
  const videoId = video.id.videoId;
  const videoTitle = video.snippet.title;
  const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;

  const fileName = `video_${videoId}.mp4`;
  const filePath = path.join(__dirname, fileName);

  try {
    const stream = ytdl(videoUrl, { filter: "audioandvideo", quality: "18" });
    const writable = fs.createWriteStream(filePath);
    stream.pipe(writable);

    stream.on("end", () => {
      api.sendMessage({
        body: `üé¨ ${videoTitle}`,
        attachment: fs.createReadStream(filePath)
      }, event.threadID, () => fs.unlinkSync(filePath));
    });

    stream.on("error", () => {
      api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID, event.messageID);
    });
  } catch (err) {
    console.error(err);
    return api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID, event.messageID);
  }
};
